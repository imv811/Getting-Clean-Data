if((outcome != "heart attack") & (outcome != "pneuimonia") & (outcome != "heartfailure")) {
stop("invalid outcome")
}
outcome <- "heart attack"
state <- "CA"
if((outcome != "heart attack") & (outcome != "pneuimonia") & (outcome != "heartfailure")) {
stop("invalid outcome")
}
if((outcome != "heart attack") & (outcome != "pneuimonia") & (outcome != "heartfailure")) stop("invalid outcome")
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
whichstates <- sum(state == (data[,7]))
if((outcome != "heart attack") & (outcome != "pneuimonia") & (outcome != "heartfailure")) stop("invalid outcome")
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
whichstates <- sum(state == (data[,7]))
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
setwd("~/Documents/R/rprog_data_ProgAssignment3-data")
if((outcome != "heart attack") & (outcome != "pneuimonia") & (outcome != "heartfailure")) stop("invalid outcome")
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
whichstates <- sum(state == (data[,7]))
if (whichstates < 1) stop("invalid state")
if(outcome == "heart attack"){
sub <- subset(data, data[,7] == state, select = select = c("Hospital.Name", (colnames(data[11]))))
else if(outcome == "heart failure")
sub <- subset(data, data[,7] == state, select = c("Hospital.Name",(colnames(data[17]))))
else if(outcome == "pneumonia")
sub <- subset(data, data[,7] == state, select = c("Hospital.Name",(colnames(data[23]))))
}
if(outcome == "heart attack"){
sub <- subset(data, data[,7] == state, select = select = c("Hospital.Name", (colnames(data[11]))))
}else if(outcome == "heart failure")
sub <- subset(data, data[,7] == state, select = c("Hospital.Name",(colnames(data[17]))))
}else if(outcome == "pneumonia")
sub <- subset(data, data[,7] == state, select = c("Hospital.Name",(colnames(data[23]))))
}
x <- 1
if (x ==1){
print('same')
} else if (x > 1){
print('bigger')
} else {
print('smaller')
}
x <- 2
if (x ==1){
print('same')
} else if (x > 1){
print('bigger')
} else {
print('smaller')
}
x <- .5
if (x ==1){
print('same')
} else if (x > 1){
print('bigger')
} else {
print('smaller')
}
if (outcome == "heart attack"){
sub <- subset(data, data[,7] == state, select = select = c("Hospital.Name", (colnames(data[11]))))
} else if (outcome == "heart failure")
sub <- subset(data, data[,7] == state, select = c("Hospital.Name",(colnames(data[17]))))
} else if (outcome == "pneumonia")
sub <- subset(data, data[,7] == state, select = c("Hospital.Name",(colnames(data[23]))))
}
if (outcome == "heart attack"){
sub <- subset(data, data[,7] == state, select = c("Hospital.Name", (colnames(data[11]))))
} else if (outcome == "heart failure")
sub <- subset(data, data[,7] == state, select = c("Hospital.Name",(colnames(data[17]))))
} else if (outcome == "pneumonia")
sub <- subset(data, data[,7] == state, select = c("Hospital.Name",(colnames(data[23]))))
}
if (outcome == "heart attack"){
sub <- subset(data, data[,7] == state, select = c("Hospital.Name", (colnames(data[11]))))
} else if (outcome == "heart failure")
sub <- subset(data, data[,7] == state, select = c("Hospital.Name",(colnames(data[17]))))
} else if (outcome == "pneumonia")
sub <- subset(data, data[,7] == state, select = c("Hospital.Name",(colnames(data[23]))))
}
if (outcome == "heart attack"){
sub <- subset(data, data[,7] == state, select = c("Hospital.Name", (colnames(data[11]))))
} else if (outcome == "heart failure"){
sub <- subset(data, data[,7] == state, select = c("Hospital.Name",(colnames(data[17]))))
} else if (outcome == "pneumonia"){
sub <- subset(data, data[,7] == state, select = c("Hospital.Name",(colnames(data[23]))))
}
View(sub)
sub[,2] <-(as.numeric(as.character(sub[,2])))
sorted <- sub[order(sub$Hospital.Name),]
minrow<- which.min(sorted[,2])
HosName <- sorted[minrow, "Hospital.Name"]
HosName # returns the hospital name
best<- function (state, outcome){ ## takes in 2 argumanets, the State to search in and the type of outcome (heart attack, heart failure, or pneumonia)
if((outcome != "heart attack") & (outcome != "pneuimonia") & (outcome != "heartfailure")) stop("invalid outcome")
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
whichstates <- sum(state == (data[,7]))
if (whichstates < 1) stop("invalid state")
if (outcome == "heart attack"){
sub <- subset(data, data[,7] == state, select = c("Hospital.Name", (colnames(data[11]))))
} else if (outcome == "heart failure"){
sub <- subset(data, data[,7] == state, select = c("Hospital.Name",(colnames(data[17]))))
} else if (outcome == "pneumonia"){
sub <- subset(data, data[,7] == state, select = c("Hospital.Name",(colnames(data[23]))))
}
sub[,2] <-(as.numeric(as.character(sub[,2])))
sorted <- sub[order(sub$Hospital.Name),]
minrow<- which.min(sorted[,2])
HosName <- sorted[minrow, "Hospital.Name"]
HosName # returns the hospital name
}
best("CA", "heart attack")
best("AZ", "heart attack")
best("TX", "heart attack")
best("MD", "heart attack")
best("TX", "heart failure")
best<- function (state, outcome){ ## takes in 2 argumanets, the State to search in and the type of outcome (heart attack, heart failure, or pneumonia)
if((outcome != "heart attack") & (outcome != "pneuimonia") & (outcome != "heart failure")) stop("invalid outcome")
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
whichstates <- sum(state == (data[,7]))
if (whichstates < 1) stop("invalid state")
if (outcome == "heart attack"){
sub <- subset(data, data[,7] == state, select = c("Hospital.Name", (colnames(data[11]))))
} else if (outcome == "heart failure"){
sub <- subset(data, data[,7] == state, select = c("Hospital.Name",(colnames(data[17]))))
} else if (outcome == "pneumonia"){
sub <- subset(data, data[,7] == state, select = c("Hospital.Name",(colnames(data[23]))))
}
sub[,2] <-(as.numeric(as.character(sub[,2])))
sorted <- sub[order(sub$Hospital.Name),]
minrow<- which.min(sorted[,2])
HosName <- sorted[minrow, "Hospital.Name"]
HosName # returns the hospital name
}
best("TX", "heart failure")
best("MD", "heart pneumonia")
best("MD", "pneumonia")
best<- function (state, outcome){ ## takes in 2 argumanets, the State to search in and the type of outcome (heart attack, heart failure, or pneumonia)
if((outcome != "heart attack") & (outcome != "pneumonia") & (outcome != "heart failure")) stop("invalid outcome")
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
whichstates <- sum(state == (data[,7]))
if (whichstates < 1) stop("invalid state")
if (outcome == "heart attack"){
sub <- subset(data, data[,7] == state, select = c("Hospital.Name", (colnames(data[11]))))
} else if (outcome == "heart failure"){
sub <- subset(data, data[,7] == state, select = c("Hospital.Name",(colnames(data[17]))))
} else if (outcome == "pneumonia"){
sub <- subset(data, data[,7] == state, select = c("Hospital.Name",(colnames(data[23]))))
}
sub[,2] <-(as.numeric(as.character(sub[,2])))
sorted <- sub[order(sub$Hospital.Name),]
minrow<- which.min(sorted[,2])
HosName <- sorted[minrow, "Hospital.Name"]
HosName # returns the hospital name
}
best("MD", "pneumonia")
best("MD", "heart attack")
best("MD", "heart attak")
best("Md", "heart attack")
if((outcome != "heart attack") & (outcome != "pneumonia") & (outcome != "heart failure")) stop("invalid outcome")
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
whichstates <- sum(state == (data[,7]))
if (whichstates < 1) stop("invalid state")
if (outcome == "heart attack"){
sub <- subset(data, data[,7] == state, select = c("Hospital.Name", (colnames(data[11]))))
} else if (outcome == "heart failure"){
sub <- subset(data, data[,7] == state, select = c("Hospital.Name",(colnames(data[17]))))
} else if (outcome == "pneumonia"){
sub <- subset(data, data[,7] == state, select = c("Hospital.Name",(colnames(data[23]))))
}
outcome <- "heart attack"
state <- "CA"
if((outcome != "heart attack") & (outcome != "pneumonia") & (outcome != "heart failure")) stop("invalid outcome")
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
whichstates <- sum(state == (data[,7]))
if (whichstates < 1) stop("invalid state")
if (outcome == "heart attack"){
sub <- subset(data, data[,7] == state, select = c("Hospital.Name", (colnames(data[11]))))
} else if (outcome == "heart failure"){
sub <- subset(data, data[,7] == state, select = c("Hospital.Name",(colnames(data[17]))))
} else if (outcome == "pneumonia"){
sub <- subset(data, data[,7] == state, select = c("Hospital.Name",(colnames(data[23]))))
}
sub[,2] <-(as.numeric(as.character(sub[,2])))
?as.numeric()
?as.character
sub[,2] <-(as.character(sub[,2]))
sub <- subset(data, data[,7] == state, select = c("Hospital.Name", (colnames(data[11]))))
View(sub)
sub[,2] <-(as.character(sub[,2]))
sub[,2] <-(as.numeric(sub[,2]))
View(sub)
nrow(sub)
sub <- subset(data, data[,7] == state, select = c("Hospital.Name", (colnames(data[11]))))
for (i in nrow(sub))
if (sub[,2] == "Not Available") sub[,2] <- NA
View(sub)
best<- function (state, outcome){ ## takes in 2 argumanets, the State to search in and the type of outcome (heart attack, heart failure, or pneumonia)
if((outcome != "heart attack") & (outcome != "pneumonia") & (outcome != "heart failure")) stop("invalid outcome")
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
whichstates <- sum(state == (data[,7]))
if (whichstates < 1) stop("invalid state")
if (outcome == "heart attack"){
sub <- subset(data, data[,7] == state, select = c("Hospital.Name", (colnames(data[11]))))
} else if (outcome == "heart failure"){
sub <- subset(data, data[,7] == state, select = c("Hospital.Name",(colnames(data[17]))))
} else if (outcome == "pneumonia"){
sub <- subset(data, data[,7] == state, select = c("Hospital.Name",(colnames(data[23]))))
}
for (i in nrow(sub))
if (sub[i,2] == "Not Available") sub[,2] <- NA
sub[,2] <-(as.numeric(as.character(sub[,2])))
sorted <- sub[order(sub$Hospital.Name),]
minrow<- which.min(sorted[,2])
HosName <- sorted[minrow, "Hospital.Name"]
HosName # returns the hospital name
}
for (i in nrow(sub))
if (sub[i,2] == "Not Available") sub[,2] <- NA
sub <- subset(data, data[,7] == state, select = c("Hospital.Name", (colnames(data[11]))))
View(sub)
sub[4,2]
class(sub[4,2])
class(sub[4,2]) == "Not Available""
(sub[4,2]) == "Not Available""
(sub[4,2]) == "Not Available"
for (i in nrow(sub))
if (sub[i,2] == "Not Available") sub[i ,2] <- NA
for (i in 1:nrow(sub))
if (sub[i,2] == "Not Available") sub[i ,2] <- NA
sub <- subset(data, data[,7] == state, select = c("Hospital.Name", (colnames(data[11]))))
for (i in 1:nrow(sub)){
if (sub[i,2] == "Not Available"){
sub[i ,2] <- NA
}
for (i in 1:nrow(sub)){
if (sub[i,2] == "Not Available"){
sub[i ,2] <- NA
}
}
for (i in 1:nrow(sub)){
if (sub[i,2] == "Not Available"){
sub[i ,2] <- NA
}
}
sub[,2] <-(as.numeric(sub[,2]))
sorted <- sub[order(sub$Hospital.Name),]
View(sorted)
best<- function (state, outcome){ ## takes in 2 argumanets, the State to search in and the type of outcome (heart attack, heart failure, or pneumonia)
if((outcome != "heart attack") & (outcome != "pneumonia") & (outcome != "heart failure")) stop("invalid outcome")
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
whichstates <- sum(state == (data[,7]))
if (whichstates < 1) stop("invalid state")
if (outcome == "heart attack"){
sub <- subset(data, data[,7] == state, select = c("Hospital.Name", (colnames(data[11]))))
} else if (outcome == "heart failure"){
sub <- subset(data, data[,7] == state, select = c("Hospital.Name",(colnames(data[17]))))
} else if (outcome == "pneumonia"){
sub <- subset(data, data[,7] == state, select = c("Hospital.Name",(colnames(data[23]))))
}
for (i in 1:nrow(sub)){
if (sub[i,2] == "Not Available"){
sub[i ,2] <- NA
}
}
sub[,2] <-(as.numeric(sub[,2]))
sorted <- sub[order(sub$Hospital.Name),]
minrow<- which.min(sorted[,2])
HosName <- sorted[minrow, "Hospital.Name"]
HosName # returns the hospital name
}
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("AZ", "pneumonia")
best("AZ", "heart failure")
best("AZ", "heart attack")
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
sub <- subset(data, data[,7] == state, select = c("Hospital.Name", (colnames(data[11]))))
sub <- subset(data, data[,7] == "CA", select = c("Hospital.Name", (colnames(data[11]))))
View(sub)
for (i in 1:nrow(sub)){
if (sub[i,2] == "Not Available"){
sub[i ,2] <- NA
}
}
sub[,2] <-(as.numeric(sub[,2]))
?order
sorted <- sub[order(sub[,2], sub$Hospital.Name),]
View(sorted)
sorted <- sub[order((sub[,2], sub$Hospital.Name), na.last = NA, ]
sorted <- sub[order((sub[,2], sub$Hospital.Name), na.last = NA), ]
sorted <- sub[order((sub[,2], sub$Hospital.Name), na.last = NA), ]
sorted <- sub[order(((sub[,2]), (sub$Hospital.Name), na.last = NA), ]
sorted <- sub[order(sub$Hospital.Name),]
order(sub$Hospital.Name)
order(sub$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, sub$Hospital.Name)
sub[order(sub$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, sub$Hospital.Name), ]
order(sub$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, sub$Hospital.Name, na.last = NA)
sub[order(sub$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack, sub$Hospital.Name, na.last = NA), ]
sub[order(sub[,2], sub$Hospital.Name, na.last = NA), ]
View(sorted)
sorted <-  sub[order(sub[,2], sub$Hospital.Name, na.last = NA), ]
View(sorted)
rankhospital <- function(state, outcome, num = "best"){
if((outcome != "heart attack") & (outcome != "pneumonia") & (outcome != "heart failure")) stop("invalid outcome")
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
whichstates <- sum(state == (data[,7]))
if (whichstates < 1) stop("invalid state")
if (outcome == "heart attack"){
sub <- subset(data, data[,7] == state, select = c("Hospital.Name", (colnames(data[11]))))
} else if (outcome == "heart failure"){
sub <- subset(data, data[,7] == state, select = c("Hospital.Name",(colnames(data[17]))))
} else if (outcome == "pneumonia"){
sub <- subset(data, data[,7] == state, select = c("Hospital.Name",(colnames(data[23]))))
}
for (i in 1:nrow(sub)){
if (sub[i,2] == "Not Available"){
sub[i ,2] <- NA
}
}
sub[,2] <-(as.numeric(sub[,2]))
sorted <-  sub[order(sub[,2], sub$Hospital.Name, na.last = NA), ]
if (num == "best") num <- 1
if (num == "worst") num <- nrow(sorted)
hospital <- sorted[num, "Hospital.Name"]
hospital
}
rankhospital("TX", "heart failure", 4)
rankhospital("TX", "heart failure", "worst")
rankhospital("TX", "heart failure", "4")
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
View(data)
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
sub <- subset(data, data[,7] == state, select = c("Hospital.Name", "State", (colnames(data[11]))))
sub <- subset(data, select = c("Hospital.Name", "State", (colnames(data[11]))))
for (i in 1:nrow(sub)){
if (sub[i,2] == "Not Available"){
sub[i ,2] <- NA
}
}
View(sub)
class(sub[,1])
class(sub[,2])
class(sub[,3])
for (i in 1:nrow(sub)){
if (sub[i,3] == "Not Available"){
sub[i ,3] <- NA
}
}
sub[,3] <-(as.numeric(sub[,3]))
class(sub[,3])
sorted <-  sub[order(sub$State, sub[,3], sub$Hospital.Name, na.last = NA), ]
View(sorted)
?which
test <- c(0.5,0.8,0.1,0.08,0.06,0.04)
which(test<0.1)[1]
test2 <- matrix(c(5,8,3,4,7,5,6,2),ncol=2)
test2
test2 < 5
which(test2 < 5)
which(test2[,1] < 5)
which(test2[,2] < 5)
split(sorted, sorted$State)
splitbystate <- split(sorted, sorted$State)
splitbystate[1]
splitbystate[1,1]
swirl()
library(swirl)
swirl()
ls()
class(pplants)
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
tabke(plants$Active_Growth_Period)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10, replacement = FALSE )
sample(1:20, 10, replace = FALSE )
sample(1:20, 10)
LETTERS
sample(LETTERS)
flips <- sample(c(0,1), 100, prob = c(.3, .7) )
flips <- sample(c(0,1), 100, prob = c(.3, .7), replace = TRUE )
flips
sum(flips[1])
sum(flips)
?rbinom
rbi(1, size = 100, prob = .7)
rbinom(1, size = 100, prob = .7)
flips2 <- rbinom(100, size = 1, prob = .7)
flips2
sum(slips2)
sum(flips2)
rnorm()
?rnorm
rnorm(10)
rnorm(10, mean = 100, sd = 25)
rpois(5, lambda  = 10)
replicate(100, rpois(5,10))
my_pois <- replicate(100, rpois(5,10))
my_pois
View(my_pois)
cm <- colMeans(my_pois)
hist(cm)
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$speed, y = cars$dist)
plot(x = cars$distance, y = cars$speed)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
plot(cars, xlim c(10,15))
plot(cars, xlim = c(10,15))
plot(cars, pch = 2
)
data("mtcars")
data(mtcars)
?boxplot
boxplot(mtcars, mpg ~ cyl)
boxplot(formula =  mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
swirl()
library(swirl)
setwd("~/Documents/R/Getting Clean Data")
data <- read.csv("getdata_data_ss06hid.csv")
head(data)
str(data)
data$VAL
summary(data$Val)
hist(data$Val)
Val <- as.numeric(data$Val)
View(data)
sum(data$Val > 23)
Val <- as.numeric(data$VAL)
sum(data$Val > 24)
sum(data$Val > 23)
sum(data$Val == 23)
count.fields(data$Val == 23)
which(data$VAL == 23)
count(which(data$VAL == 23))
count.fields(data$VAL == 23)
which(data$VAL == 24)
length(which(data$VAL == 24))
class(data$FES)
summary(data$FES)
read.table("getdata_data_DATA.gov_NGAP.xlsx")
dat <- read.delim("getdata_data_DATA.gov_NGAP.xlsx", row.names = 18, skip = 17, nrows = 6)
dat <- read.delim("getdata_data_DATA.gov_NGAP.xlsx", skip = 17, nrows = 6)
dat <- read.delim("getdata_data_DATA.gov_NGAP.xlsx", nrows = 23)
dat <- read.delim("getdata_data_DATA.gov_NGAP.xlsx", nrows = 23, blank.lines.skip = TRUE)
dat <- read.delim("getdata_data_DATA.gov_NGAP.xlsx", nrows = 23, blank.lines.skip = TRUE)
dat <- read.delim("getdata_data_DATA.gov_NGAP.xlsx", nrows = 23, blank.lines.skip = TRUE)
